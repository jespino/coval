import unittest
from codval.international import *

class CodeValidatorFinanceTestCase(unittest.TestCase):

    def setUp(self):
        pass

    def test_banknote_euro(self):
        self.assertTrue(banknote_euro('X05108365955'))
        self.assertTrue(banknote_euro('X00133202927'))
        self.assertTrue(banknote_euro('U27112359308'))
        self.assertTrue(banknote_euro('N14037977172'))
        self.assertTrue(banknote_euro('U27112359308'))
        self.assertTrue(banknote_euro('U27005282276'))
        self.assertTrue(banknote_euro('M50068527754'))
        self.assertFalse(banknote_euro('ABC'))
        self.assertFalse(banknote_euro('M50068524754'))
        self.assertFalse(banknote_euro('A50068527754'))

    def test_iban(self):
        self.assertTrue(iban('CH10002300A1023502601'))
        self.assertTrue(iban('DE60700517550000007229'))
        self.assertFalse(iban('DE6070051755000000722'))
        self.assertFalse(iban('DE10002300A1023502601'))
        self.assertFalse(iban('PL12100500000123456789'))
        self.assertTrue(iban('AD1200012030200359100100'))
        self.assertTrue(iban('AE070331234567890123456'))
        self.assertTrue(iban('AL47212110090000000235698741'))
        self.assertTrue(iban('AT611904300234573201'))
        self.assertTrue(iban('BA391290079401028494'))
        self.assertTrue(iban('BE68539007547034'))
        self.assertTrue(iban('BG80BNBG96611020345678'))
        self.assertTrue(iban('CH9300762011623852957'))
        self.assertTrue(iban('CY17002001280000001200527600'))
        self.assertTrue(iban('CZ6508000000192000145399'))
        self.assertTrue(iban('DE89370400440532013000'))
        self.assertTrue(iban('DK5000400440116243'))
        self.assertTrue(iban('EE382200221020145685'))
        self.assertTrue(iban('ES9121000418450200051332'))
        self.assertTrue(iban('FR1420041010050500013M02606'))
        self.assertTrue(iban('FI2112345600000785'))
        self.assertTrue(iban('GB29NWBK60161331926819'))
        self.assertTrue(iban('GE29NB0000000101904917'))
        self.assertTrue(iban('GI75NWBK000000007099453'))
        self.assertTrue(iban('GR1601101250000000012300695'))
        self.assertTrue(iban('HR1210010051863000160'))
        self.assertTrue(iban('HU42117730161111101800000000'))
        self.assertTrue(iban('IE29AIBK93115212345678'))
        self.assertTrue(iban('IL620108000000099999999'))
        self.assertTrue(iban('IS140159260076545510730339'))
        self.assertTrue(iban('IT60X0542811101000000123456'))
        self.assertTrue(iban('KW81CBKU0000000000001234560101'))
        self.assertTrue(iban('LB62099900000001001901229114'))
        self.assertTrue(iban('LI21088100002324013AA'))
        self.assertTrue(iban('LT121000011101001000'))
        self.assertTrue(iban('LU280019400644750000'))
        self.assertTrue(iban('LV80BANK0000435195001'))
        self.assertTrue(iban('MC1112739000700011111000h79'))
        self.assertTrue(iban('ME25505000012345678951'))
        self.assertTrue(iban('MK07250120000058984'))
        self.assertTrue(iban('MR1300020001010000123456753'))
        self.assertTrue(iban('MT84MALT011000012345MTLCAST001S'))
        self.assertTrue(iban('MU17BOMM0101101030300200000MUR'))
        self.assertTrue(iban('NL91ABNA0417164300'))
        self.assertTrue(iban('NO9386011117947'))
        self.assertTrue(iban('PL61109010140000071219812874'))
        self.assertTrue(iban('PT50000201231234567890154'))
        self.assertTrue(iban('RO49AAAA1B31007593840000'))
        self.assertTrue(iban('RS35260005601001611379'))
        self.assertTrue(iban('SA0380000000608010167519'))
        self.assertTrue(iban('SE9412312345678901234561'))
        self.assertTrue(iban('SI56191000000123438'))
        self.assertTrue(iban('SK3112000000198742637541'))
        self.assertTrue(iban('SM86U0322509800000000270100'))
        self.assertTrue(iban('TN5914207207100707129648'))
        self.assertTrue(iban('TR330006100519786457841326'))

if __name__ == '__main__':
    unittest.main()
